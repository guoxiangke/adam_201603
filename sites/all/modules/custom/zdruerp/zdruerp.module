<?php

/**
 * Implements hook_menu().
 */
function zdruerp_menu() {
  $items = array();
  $items['user/%user/erp'] = array(
    'title' => t('Configue ERP'),//connect erp!
    'page callback' => 'drupal_get_form',
    'page arguments' => array('configue_erp_from'),
    'access callback' => '_user_has_role',
    'access arguments' => array(1, array('企业用户')),
    'type' => MENU_LOCAL_TASK,
  );
  $items['user/%user/connect'] = array(
    'title' => t('Connect to ERP'),//connect erp!
    'page callback' => '_connect_erp',
    'page arguments' => array(1),
    'access callback' => '_user_has_role',
    'access arguments' => array(1, array('企业用户','企业子用户')),
    'type' => MENU_LOCAL_TASK,
  );
  $items['author/erp'] = array(
    'page callback' => '_zdruerp_author_erp',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['author/erp_check'] = array(
    'page callback' => '_zdruerp_author',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['pay/%node/%node/%'] = array(
    'title' => 'Checkout',//connect erp!
    'page callback' => '_pay_checkout',
    'page arguments' => array(1,2),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function _zdruerp_author_erp(){
  // global $user;
  drupal_goto('http://erp.com/checkuser?token='.session_id());
}

function  _zdruerp_author(){
  if (empty($_POST['token'])) {
    drupal_exit();//error!
  }
  header('Content-Type: application/json');
  $sid = $_POST['token'];
  // $sid = 'c54J16-toE4ZtE_tIWfSifXAn2n4opR5Mi_onAL2kIM';
  $uid = db_select('sessions','s')
    ->fields('s', array('uid'))
    ->condition('sid', $sid)
    ->execute()
    ->fetchField();
  if(is_numeric($uid) && $uid>=0){
    $account = user_load($uid);
    print json_encode($account);
    drupal_exit();
  }else{//error!
    drupal_exit();
  }
}

function _user_has_role($user, $roles = array()) {
  foreach ($roles as $role) {
    if (in_array($role, $user->roles)) {
      return TRUE;
    }
  }
  return FALSE;
}
function configue_erp_from(){
  global $user;
  $setted = variable_get('zdruerp_'.$user->uid, FALSE);
  $form['erpdomain'] = array(
    '#type' => 'textfield',
    '#title' => '域名设置',
    '#description' => '必须字母开头，只准有字母？',
    '#default_value' => variable_get('zdruerp_'.$user->uid, "yoursubdomain"),
    '#required' => TRUE,
    '#disabled'=>$setted?TRUE:FALSE,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
    '#disabled'=>$setted?TRUE:FALSE,
  );
  return $form;
}


/**
 * save wechat setting config
 CALL bash.sh reload nginx for subdomain.
 */
function configue_erp_from_submit($form, &$form_state){
  global $user;
  variable_set('zdruerp_'.$user->uid, $form_state['values']['erpdomain']);
  // drupal_set_message('设置成功！您的URL是：'.url(NULL, array('absolute' => TRUE)) . (variable_get('clean_url', 0) ? '' : '?q=').'???', 'warning', FALSE);
  //do some subdomain settings!!!here!
}

/**
 * Implements hook_user_login().
 */
function zdruerp_user_login(&$edit, $account) {
  $params = session_get_cookie_params();
  $expire = $params['lifetime'] ? REQUEST_TIME + $params['lifetime'] : 0;
  setcookie('token', session_id(), $expire, $params['path'], $params['domain'], $params['secure'], $params['httponly']);

  $sso_host = 'http://111.9.116.181:20160';
  $url = $sso_host.'/sso/api/rest/login';
  $appID = '3b0d556d3add420596a9afdd58f1bc103b0d556d3add420596a9afdd58f1bc10';
  $service = 'http://new.camplus.cn:8003/sso';
  $data = 'appId='.$appID.'&service='.$service.'&username=admin&password=adam2002';//'.$account->name.' .$account->name;
  $options = array(
                'method' => 'POST',
                'data' => $data,
                'timeout' => 15,
                'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
        );
  $result = drupal_http_request($url, $options);
  if(isset($result->data)){
    $data = drupal_json_decode($result->data);
    if($data['code']=='200'){
      $sso_client_ec = $data['data']['SSO_CLIENT_EC'];
      watchdog('login','SSO LOGIN成功！go other site: http://othersite.com/service?SSO_CLIENT_EC='.$sso_client_ec);
      $sso_client_ecs = array($account->uid=>$sso_client_ec);
      variable_set('zdruerp_sso_client_ec',$sso_client_ecs);
      //TO GET see zdruerp_user_logout
    }

  }
  watchdog('$result', '<pre>'.print_r($result,1));
  // dpm($result);
}
/**
 * Implements hook_user_logout().
 */
function zdruerp_user_logout($account) {
  $sso_client_ecs = variable_get('zdruerp_sso_client_ec',array());
  unset($sso_client_ecs[$account->uid]);
  variable_set('zdruerp_sso_client_ec',$sso_client_ecs);
}
/**
 * Implements hook_uninstall().
 */
function zdruerp_uninstall() {
  variable_del('zdruerp_sso_client_ec_*');
}
/**
 * Implements hook_init().
 */
function zdruerp_init() {
  if(user_is_anonymous()) return;
  $url = URL('',array('absolute'=>1));
  $sso_host = 'http://111.9.116.181:20160';
  $sso_logout_url = $sso_host.'/sso/api/logoutJs';
  drupal_add_js($sso_logout_url.'?appId=3b0d556d3add420596a9afdd58f1bc10&logoutSuccessUrl='.$url, 'external');
  drupal_add_js(drupal_get_path('module', 'zdruerp').'/sso.js',array('weight' => 1,'group'=>JS_THEME,'scope'=>'footer'));
}

function _connect_erp(){
  return '_connect_erp!';
}

/**
 * Implements hook_user_update().
  UPdate user!! Call ERP API UPDATE
 */
function zdruerp_user_update(&$edit, $account, $category) {
  // $account = user_load(96);
  // dpm(subuser_load_all($account));
}

/**
 * Implements hook_user_delete().
 delete User Call ERP API DELETE
 */
function zdruerp_user_delete($account) {
  // $account = user_load(96);
  // dpm(subuser_load_all($account));
}

/**
 * Implements hook_form_alter().
 Add subsuser! Call ERP API PUT
 */
function zdruerp_form_user_register_form_alter(&$form, &$form_state) {
  $form['#submit'][] = 'zdruerp_user_register_form_submit';
}

function zdruerp_user_register_form_submit($form, &$form_state) {
  global $user;
  // If the subuser relation is to be stored then create the relation.
  if ($form_state['values']['subuser_relation']) {
    // $endpoints = array(
    //   array('entity_type' => 'user', 'entity_id' => $form_state['user']->uid),
    //   array('entity_type' => 'user', 'entity_id' => $user->uid),
    // );
    // $relation = relation_create('subuser', $endpoints);
    // relation_save($relation);
    // dpm($form);
    // dpm($form_state);
  }
}

/**
 * Implements hook_node_submit().
 */
function zdruerp_node_submit($node, $form, &$form_state) {
  // if($node->type == 'service_order'){
  //   // dpm($form_state);
  //   $url = 'pay/'.$form_state['values']['field_from_service'][LANGUAGE_NONE][0]['target_id'].'/'.$node->nid.'/'.$field_amount;
  //   drupal_goto($url);
  // }
}


function _pay_checkout($server_node,$node){//$order_node
  //get amount!
  if($node->field_payment_choice[LANGUAGE_NONE][0]['value']==0){// 一次性付款！
    $field_amount = $node->field_amount[LANGUAGE_NONE][0]['value'];
  }else{// 分阶段付款！
    $entity_id = $node->field_multi_milestones[LANGUAGE_NONE][0]['target_id'];
    $entity = entity_object_load($entity_id, 'milestone');
    $field_amount = $entity->field_amount[LANGUAGE_NONE][0]['value'];
  }
  return 'Pay with:'.$field_amount;
}

// id (String, 1 characters ) 3
// field_multiple_payment_eck_payment_entity_title (String, 5 characters ) SO143
// field_single_payment_eck_payment_entity_title (NULL)
// node_field_data_field_from_service_1_title (String, 19 characters ) 很好的logo设计
// node_field_data_field_from_service_title (NULL)
// node_field_data_field_from_service_1_nid (String, 2 characters ) 11
// node_field_data_field_from_service_nid (NULL)
// field_data_body_node_entity_type (String, 4 characters ) node

function get_service_info_by_payment($entity_id){
  return db_query("SELECT field_payment_field_collection_item.title AS field_payment_field_collection_item_title, field_payment_field_collection_item.nid AS field_payment_field_collection_item_nid, node_field_data_field_from_service.title AS node_field_data_field_from_service_title, node_field_data_field_from_service.nid AS node_field_data_field_from_service_nid, field_collection_item.item_id AS item_id, 'field_collection_item' AS field_data_field_pay_amount_field_collection_item_entity_typ, 'node' AS field_data_body_node_entity_type
FROM
{field_collection_item} field_collection_item
INNER JOIN {field_data_field_payment} field_data_field_payment ON field_collection_item.item_id = field_data_field_payment.field_payment_value
INNER JOIN {node} field_payment_field_collection_item ON field_data_field_payment.entity_id = field_payment_field_collection_item.nid
LEFT JOIN {field_data_field_from_service} field_payment_field_collection_item__field_data_field_from_service ON field_payment_field_collection_item.nid = field_payment_field_collection_item__field_data_field_from_service.entity_id AND (field_payment_field_collection_item__field_data_field_from_service.entity_type = 'node' AND field_payment_field_collection_item__field_data_field_from_service.deleted = '0')
LEFT JOIN {node} node_field_data_field_from_service ON field_payment_field_collection_item__field_data_field_from_service.field_from_service_target_id = node_field_data_field_from_service.nid
WHERE (( (field_collection_item.item_id = '".$entity_id."' ) ))
LIMIT 1 OFFSET 0")->fetchObject();
}

/**
 * [get_five_star_results description]
 * @param  [type] $nid      [description]
 * @param  string $nodetype [description]
 * @param  string $tag      [description]
 * @return [type]           [description]
 */
function get_five_star_results($nid,$nodetype='service',$tag='first_rate') {
  // $allordersid = get_all_sucess_orders_byservice($node->nid);
  $allordersid = get_all_stared_orders($nodetype,$nid);
  //对于每一个成功的订单的评价的平均值计算
  foreach ($allordersid as $key => $order) {
    // $order_node = node_load($order->nid);
    // get all rate of this order!!! aveage!
    $ids[] = $order->nid;
  }
  $votes_results = fivestar_get_votes_multiple('node', $ids,$tag);
  //field_first_rate
   dpm($votes_results);
  $vote_user = 0;
  $vote_average = 0;
  $vote_count = 0;
  $count = 0;
  foreach ($votes_results['node'] as $nid => $vote) {
    if(isset($vote['user']['value'])) $vote_user += (int)$vote['user']['value'];
    if(isset($vote['average']['value'])) $vote_average += (int)$vote['average']['value'];
    if(isset($vote['count']['value'])) $vote_count += (int)$vote['count']['value'];
    $count++;
  }
 //  dpm($vote_user/$count);
//   dpm($vote_average/$count);
//   dpm($vote_count);
  dpm($count);
  $count *=20;
  $first_rate = array('user'=>(float)$vote_user/$count,
    'count'=>$vote_count,
    'average'=>(float)$vote_average/$count,
    );
  //dpm($first_rate);
  return $first_rate;
  // $node->content['#first_rate']= $first_rate;
}


function get_all_stared_orders($nodtype,$nid){
  if($nodtype=='store'){
    return db_query("SELECT node.title AS node_title, node.nid AS nid
          FROM
          {node} node
          LEFT JOIN {field_data_field_from_service} field_data_field_from_service ON node.nid = field_data_field_from_service.entity_id AND (field_data_field_from_service.entity_type = 'node' AND field_data_field_from_service.deleted = '0')
          LEFT JOIN {node} node_field_data_field_from_service ON field_data_field_from_service.field_from_service_target_id = node_field_data_field_from_service.nid
          LEFT JOIN {og_membership} node_field_data_field_from_service__og_membership ON node_field_data_field_from_service.nid = node_field_data_field_from_service__og_membership.etid AND node_field_data_field_from_service__og_membership.entity_type = 'node'
          LEFT JOIN {node} node_og_membership ON node_field_data_field_from_service__og_membership.gid = node_og_membership.nid
          INNER JOIN {field_data_field_so_status} field_data_field_so_status ON node.nid = field_data_field_so_status.entity_id AND (field_data_field_so_status.entity_type = 'node' AND field_data_field_so_status.deleted = '0')
          WHERE (( (node_og_membership.nid = '".$nid."' ) )AND(( (node.status = '1') AND (node.type IN  ('service_order')) AND (field_data_field_so_status.field_so_status_value IN  ('1', '2')) )))")->fetchAll();
  }
  if($nodtype=='service'){
    return db_query("SELECT node.title AS node_title, node.nid AS nid
      FROM
      {node} node
      LEFT JOIN {field_data_field_from_service} field_data_field_from_service ON node.nid = field_data_field_from_service.entity_id AND (field_data_field_from_service.entity_type = 'node' AND field_data_field_from_service.deleted = '0')
      LEFT JOIN {node} node_field_data_field_from_service ON field_data_field_from_service.field_from_service_target_id = node_field_data_field_from_service.nid
      INNER JOIN {field_data_field_so_status} field_data_field_so_status ON node.nid = field_data_field_so_status.entity_id AND (field_data_field_so_status.entity_type = 'node' AND field_data_field_so_status.deleted = '0')
      WHERE (( (node_field_data_field_from_service.nid = '".$nid."' ) )AND(( (node.status = '1') AND (node.type IN  ('service_order')) AND (field_data_field_so_status.field_so_status_value IN  ('1', '2')) )))")->fetchAll();

  }
}
